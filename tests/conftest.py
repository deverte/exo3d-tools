import numpy as np
import pytest

import exo3d_tools as e3


text_data_3d_value = (
    "Rmax 70.0\n"
    "nR 4\n"
    "nF 3\n"
    "nTet 2\n"
    "arrays 0\n"
    "H1a.Pn[0]\n"
    "0.7739560485559633 0.9756223516367559 0.37079802423258124 "
    "0.2272387217847769 0.4388784397520523 0.761139701990353 "
    "0.9267649888486018 0.5545847870158348 0.8585979199113825 "
    "0.7860643052769538 0.6438651200806645 0.06381725610417532 "
    "0.6973680290593639 0.12811363267554587 0.82276161327083 "
    "0.8276311719925821 0.09417734788764953 0.45038593789556713 "
    "0.44341419882733113 0.6316643991220648 \n"
    "H1a.Pn[1]\n"
    "0.7580877400853738 0.19463870785196757 0.7447621559078171 "
    "0.1894713590842857 0.35452596812986836 0.4667210037270342 "
    "0.96750973243421 0.12992150533547164 0.9706980243949033 "
    "0.04380376578722878 0.32582535813815194 0.47570492622593374 "
    "0.8931211213221977 0.15428949206754783 0.3704597060348689 "
    "0.2269093490508841 0.7783834970737619 0.6830489532424546 "
    "0.4695558112758079 0.6698139946825103 \n"
    "H1a.Pn[2]\n"
    "0.43715191887233074 0.8047643574968019 0.19990820247510832 "
    "0.7807290310219679 0.8326781960578374 0.38747837903017446 "
    "0.007362269751005512 0.45891577553833995 0.7002651020022491 "
    "0.2883281039302441 0.7869243775021384 0.5687411959528937 "
    "0.31236664138204107 0.6824955039749755 0.6648508565920321 "
    "0.13979699812765745 0.8322598013952011 0.1397524836093098 "
    "0.7051653786263351 0.11453007353597344 \n"
    "H1p.Vr[0]\n"
    "0.6684029617904717 0.5535794006579958 0.2145846728195292 "
    "0.28138389202199654 0.4710962061431325 0.5592071607454135 "
    "0.40852864372463615 0.2935937577666836 0.5652361064811888 "
    "0.3039500980626122 0.8534030732681661 0.6619165147268951 "
    "0.7649988574160256 0.030817834567939406 0.23393948586534075 "
    "0.5570321523412783 0.6347183200005908 0.43671738923236236 "
    "0.05830274168906602 0.7838982091064135 \n"
    "H1p.Vr[1]\n"
    "0.6643135403273875 0.09004786077564175 0.15231210271316842 "
    "0.6302825931188885 0.4063868614400705 0.7223593505964503 "
    "0.696320375077736 0.3618126105533904 0.8140203846660347 "
    "0.4618772302513874 0.4461562755740307 0.087649919316101 "
    "0.1669729199077039 0.1612717790336018 0.3810212260964825 "
    "0.11800590212051532 0.022712073133860478 0.5010447751033635 "
    "0.3015120891478765 0.9618976645495145 \n"
    "H1p.Vr[2]\n"
    "0.908580690707607 0.7168901891589956 0.45577628983361107 "
    "0.8566142840923755 0.6997071338107496 0.44936150214378867 "
    "0.20236336479523032 0.7585195298352101 0.2658699614595196 "
    "0.272241561845159 0.3059566241506525 0.7194629559509368 "
    "0.9691763773477239 0.0963909621534993 0.579219568941896 "
    "0.4320930397751037 0.7787509039657946 0.9026023965438417 "
    "0.1767727829392317 0.6273088407024432 \n"
    "H1p.Vr[3]\n"
    "0.5840979689127356 0.49399081924451893 0.1705929685368861 "
    "0.022803871029697498 0.64984660155482 0.3298612123327853 "
    "0.9251201183767972 0.9585592132414453 0.08444432113988909 "
    "0.1445241888660469 0.581061139700395 0.48230343694290023 "
    "0.41580740217060963 0.10340296772255164 0.34686980453483707 "
    "0.7827352272502862 0.04161417386189248 0.587644572177712 "
    "0.5909154914814168 0.08272999992243857 \n"
    "3D:RFT\n"
    "-1.5707963267948966 -0.5235987755982989 0.5235987755982987 "
    "1.5707963267948966 -1.5707963267948966 0.0 1.5707963267948966 0.0 "
    "33.75 35.535000000000004 1.0 1.07 50.125 52.767500000000005 17.375 "
    "18.302500000000002 66.5 70.0 0.0 0.0 \n"
)


text_data_1d_value = (
    "x Y Z H1a.Pn H1p.Vr\n"
    "-68,2500 -0,0000 -0,0000 0,4696 0,1768\n"
    "-51,4463 -0,0000 -0,0000 0,3705 0,5792\n"
    "-34,6425 -0,0000 -0,0000 0,3258 0,3060\n"
    "-17,8388 -0,0000 -0,0000 0,9675 0,2024\n"
    "-1,0350 -0,0000 -0,0000 0,7448 0,4558\n"
    "1,0350 0,0000 0,0000 0,7581 0,9086\n"
    "17,8388 0,0000 0,0000 0,3545 0,6997\n"
    "34,6425 0,0000 0,0000 0,9707 0,2659\n"
    "51,4463 0,0000 0,0000 0,8931 0,9692\n"
    "68,2500 0,0000 0,0000 0,7784 0,7788\n"
)


@pytest.fixture
def text_data_3d():
    return text_data_3d_value


@pytest.fixture
def text_data_1d():
    return text_data_1d_value


@pytest.fixture
def make_data_3d():
    def _make_data_3d(
        Rplanet: float = 1.0,
        Rmax: float = 70.0,
        nR: int = 180,
        nF: int = 97,
        nTet: int = 28,
        keys: list[str] = ["H1a.Pn", "H1p.Tn", "H1p.Vr"],
    ):
        rng = np.random.default_rng(seed=42)
        r_v = np.linspace(1.0, 0.95 * Rmax, nR + 1)
        phi_v = np.linspace(0.0, 2 * np.pi, nF + 1)
        theta_v = np.linspace(-np.pi / 2, np.pi / 2, nTet + 2)
        r_n = np.linspace(1.0 + 0.001 * Rmax, Rmax, nR + 1)
        phi_n = np.linspace(0.0, 2 * np.pi, nF + 1)
        theta_n = np.linspace(-np.pi / 2, np.pi / 2, nTet + 1)
        return e3.Data3D(
            params={
                "Rplanet": f"{Rplanet}",
                "Rmax": f"{Rmax}",
                "nR": f"{nR}",
                "nF": f"{nF}",
                "nTet": f"{nTet}",
            },
            arrays={
                key: rng.random((nTet + 2, nF + 1, nR + 1))
                if (".Vr" in key) or (".Vt" in key) or (".Vf" in key)
                else rng.random((nTet + 1, nF + 1, nR + 1)) for key in keys
            },
            grid=e3.Grid3D(
                v=np.meshgrid(theta_v, phi_v, r_v),
                n=np.meshgrid(theta_n, phi_n, r_n),
            ),
            units=e3.EXO3D_UNITS,
        )
    return _make_data_3d


@pytest.fixture
def make_data_2d(make_data_3d):
    def _make_data_2d(
        Rplanet: float = 1.0,
        Rmax: float = 70.0,
        nR: int = 180,
        nF: int = 97,
        nTet: int = 28,
        keys: list[str] = ["H1a.Pn", "H1p.Tn", "H1p.Vr"],
    ):
        d3 = make_data_3d(Rplanet, Rmax, nR, nF, nTet, keys)
        d2 = d3.to_2d(0)
        return d2
    return _make_data_2d


@pytest.fixture
def make_data_1d(make_data_3d):
    def _make_data_1d(
        Rplanet: float = 1.0,
        Rmax: float = 70.0,
        nR: int = 180,
        nF: int = 97,
        nTet: int = 28,
        keys: list[str] = ["H1a.Pn", "H1p.Tn", "H1p.Vr"],
    ):
        d3 = make_data_3d(Rplanet, Rmax, nR, nF, nTet, keys)
        d1 = d3.to_1d(0, 0)
        d1.units = e3.CVIEWER_UNITS
        return d1
    return _make_data_1d